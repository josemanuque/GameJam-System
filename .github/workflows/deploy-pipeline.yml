name: Deployment Pipeline

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
        manual_trigger:
            description: 'Trigger the workflow manually'
            required: true
            default: 'true'
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge Develop into Main
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout main
          git merge develop
          git push origin main
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.12.2'
        
      - name: Install Dependencies
        run: |
          cd App
          npm i
          mkdir -p src/app/environments/
          echo "export const API_IP = '${{ secrets.API_IP }}';" > src/app/environments/environment.ts
          
        
      - name: If Frontend has changes build and Push to Main
        run: |
          git diff --exit-code --quiet App/src
          status=$?
          if [ $status -eq 1 ]; then
              echo "Changes detected"
              cd App
              npm run build:production
              DEVELOP_COMMIT=$(git rev-parse develop)
              git add -A
              git add -f dist
              git commit -m "Build Angular App (from develop commit: $DEVELOP_COMMIT)"
              git push origin main
          else
              echo "No changes detected no build generated"
          fi

      - name: Connect to Oracle VM and pull the new changes
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SSH_HOST_IP }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
                export NVM_DIR=~/.nvm
                source ~/.nvm/nvm.sh
                cd ${{ secrets.SSH_WORK_DIR }}
                git pull
                cd backend
                npm i
                sudo systemctl restart game-jam-api
                sudo systemctl restart game-jam-frontend